"""Review 추가 Like추가 Comment추가  , Place address -> region, ThemeEnum 식당 추가

Revision ID: 534ef42ff56a
Revises: e210e47788c1
Create Date: 2025-01-04 21:46:06.579141

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "534ef42ff56a"
down_revision: Union[str, None] = "e210e47788c1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reviews",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("travelroute_id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("like_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["travelroute_id"],
            ["travelroute.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("review_id", sa.Integer(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["review_id"],
            ["reviews.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("review_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["review_id"],
            ["reviews.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "review_id", name="unique_user_review_like"),
    )
    op.create_table(
        "review_images",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("review_id", sa.Integer(), nullable=False),
        sa.Column("filepath", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["review_id"],
            ["reviews.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "place",
        sa.Column(
            "region",
            sa.Enum(
                "제주시",
                "서귀포시",
                "한경면",
                "한림읍",
                "애월읍",
                "조천읍",
                "구좌읍",
                "대정읍",
                "안덕면",
                "남원읍",
                "표선면",
                "성산읍",
                name="regionenum",
            ),
            nullable=False,
        ),
    )
    op.drop_column("place", "address")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "place",
        sa.Column(
            "address",
            postgresql.ENUM(
                "제주시",
                "서귀포시",
                "한경면",
                "한림읍",
                "애월읍",
                "조천읍",
                "구좌읍",
                "대정읍",
                "안덕면",
                "남원읍",
                "표선면",
                "성산읍",
                name="regionenum",
            ),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("place", "region")
    op.drop_table("review_images")
    op.drop_table("likes")
    op.drop_table("comments")
    op.drop_table("reviews")
    # ### end Alembic commands ###
